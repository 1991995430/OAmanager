<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.offcn.mapper.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.offcn.pojo.Project">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="comname" jdbcType="INTEGER" property="comname" />
    <result column="comper" jdbcType="VARCHAR" property="comper" />
    <result column="emp_fk1" jdbcType="INTEGER" property="empFk1" />
    <result column="empcount" jdbcType="INTEGER" property="empcount" />
    <result column="starttime" jdbcType="DATE" property="starttime" />
    <result column="buildtime" jdbcType="DATE" property="buildtime" />
    <result column="cost" jdbcType="INTEGER" property="cost" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="endtime" jdbcType="DATE" property="endtime" />
    <result column="emp_fk" jdbcType="INTEGER" property="empFk" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.offcn.pojo.Project">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, pname, comname, comper, emp_fk1, empcount, starttime, buildtime, cost, level, 
    endtime, emp_fk
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>

  <resultMap id="resultMapCuEmpPro" type="com.offcn.pojo.Project">
    <id property="pid" column="pid" ></id>
    <result property="pname" column="pname"></result>
    <result property="comname" column="comname"></result>
    <result property="comper" column="comper"></result>
    <result property="empFk1" column="empFk1"></result>
    <result property="empcount" column="empcount"></result>
    <result property="starttime" column="starttime"></result>
    <result property="buildtime" column="buildtime"></result>
    <result property="cost" column="cost"></result>
    <result property="endtime" column="endtime"></result>
    <association property="employee" javaType="com.offcn.pojo.Employee">
      <id property="eid" column="eid"></id>
      <result property="ename" column="ename"></result>
    </association>
    <association property="customer" javaType="com.offcn.pojo.Customer">
      <id property="id" column="id"></id>
      <result property="comname" column="cname"></result>
    </association>
    <association property="properties" javaType="com.offcn.pojo.Properties">
      <id property="id" column="sid"></id>
      <result property="key" column="key"></result>
    </association>

  </resultMap>
<!--查询项目的数据-->
  <select id="selectByProEmpCus" resultMap="resultMapCuEmpPro">
    select project.*,customer.`comname` as cname,employee.`ename` ,properties.id sid,properties.`key`
        from project
        left join customer
        on project.`comname` = customer.`id`
        left join employee
        on project.`emp_fk1`=employee.`eid`
        left join properties
        on project.`state` = properties.value
        where properties.`pid`=(select id  from properties where proname='project_state' )
  </select>

  <!--根据关键字查询项目的数据-->
  <select id="selectByProKeyWord" parameterType="Map" resultMap="resultMapCuEmpPro">
    select project.*,customer.`comname` as cname,employee.`ename` ,properties.id sid,properties.`key`
        from project
        left join customer
        on project.`comname` = customer.`id`
        left join employee
        on project.`emp_fk1`=employee.`eid`
        left join properties
        on project.`state` = properties.value
        where properties.`pid`=(select id  from properties where proname='project_state' )
        order by #{orderby}
    <if test="cid.equals('1')">
      where project.`pname`  like '%'+#{keyword}+'%'
      order by #{orderby}
    </if>
    <if test="cid.equals('2')">
      where employee.ename  like '%'+#{keyword}+'%'
      order by #{orderby}
    </if>

  </select>

  <select id="selectByExampleWithBLOBs" parameterType="com.offcn.pojo.ProjectExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />

    <include refid="Blob_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.offcn.pojo.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from project
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.offcn.pojo.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.offcn.pojo.Project">
    insert into project (pid, pname, comname, 
      comper, emp_fk1, empcount, 
      starttime, buildtime, cost, 
      level, endtime, emp_fk, 
      remark)
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{comname,jdbcType=INTEGER}, 
      #{comper,jdbcType=VARCHAR}, #{empFk1,jdbcType=INTEGER}, #{empcount,jdbcType=INTEGER}, 
      #{starttime,jdbcType=DATE}, #{buildtime,jdbcType=DATE}, #{cost,jdbcType=INTEGER}, 
      #{level,jdbcType=VARCHAR}, #{endtime,jdbcType=DATE}, #{empFk,jdbcType=INTEGER}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.offcn.pojo.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="comname != null">
        comname,
      </if>
      <if test="comper != null">
        comper,
      </if>
      <if test="empFk1 != null">
        emp_fk1,
      </if>
      <if test="empcount != null">
        empcount,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="buildtime != null">
        buildtime,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="endtime != null">
        endtime,
      </if>
      <if test="empFk != null">
        emp_fk,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="comname != null">
        #{comname,jdbcType=INTEGER},
      </if>
      <if test="comper != null">
        #{comper,jdbcType=VARCHAR},
      </if>
      <if test="empFk1 != null">
        #{empFk1,jdbcType=INTEGER},
      </if>
      <if test="empcount != null">
        #{empcount,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=DATE},
      </if>
      <if test="buildtime != null">
        #{buildtime,jdbcType=DATE},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=DATE},
      </if>
      <if test="empFk != null">
        #{empFk,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.offcn.pojo.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.comname != null">
        comname = #{record.comname,jdbcType=INTEGER},
      </if>
      <if test="record.comper != null">
        comper = #{record.comper,jdbcType=VARCHAR},
      </if>
      <if test="record.empFk1 != null">
        emp_fk1 = #{record.empFk1,jdbcType=INTEGER},
      </if>
      <if test="record.empcount != null">
        empcount = #{record.empcount,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        starttime = #{record.starttime,jdbcType=DATE},
      </if>
      <if test="record.buildtime != null">
        buildtime = #{record.buildtime,jdbcType=DATE},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null">
        endtime = #{record.endtime,jdbcType=DATE},
      </if>
      <if test="record.empFk != null">
        emp_fk = #{record.empFk,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update project
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      comname = #{record.comname,jdbcType=INTEGER},
      comper = #{record.comper,jdbcType=VARCHAR},
      emp_fk1 = #{record.empFk1,jdbcType=INTEGER},
      empcount = #{record.empcount,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=DATE},
      buildtime = #{record.buildtime,jdbcType=DATE},
      cost = #{record.cost,jdbcType=INTEGER},
      level = #{record.level,jdbcType=VARCHAR},
      endtime = #{record.endtime,jdbcType=DATE},
      emp_fk = #{record.empFk,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      comname = #{record.comname,jdbcType=INTEGER},
      comper = #{record.comper,jdbcType=VARCHAR},
      emp_fk1 = #{record.empFk1,jdbcType=INTEGER},
      empcount = #{record.empcount,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=DATE},
      buildtime = #{record.buildtime,jdbcType=DATE},
      cost = #{record.cost,jdbcType=INTEGER},
      level = #{record.level,jdbcType=VARCHAR},
      endtime = #{record.endtime,jdbcType=DATE},
      emp_fk = #{record.empFk,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.offcn.pojo.Project">
    update project
    <set>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="comname != null">
        comname = #{comname,jdbcType=INTEGER},
      </if>
      <if test="comper != null">
        comper = #{comper,jdbcType=VARCHAR},
      </if>
      <if test="empFk1 != null">
        emp_fk1 = #{empFk1,jdbcType=INTEGER},
      </if>
      <if test="empcount != null">
        empcount = #{empcount,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=DATE},
      </if>
      <if test="buildtime != null">
        buildtime = #{buildtime,jdbcType=DATE},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        endtime = #{endtime,jdbcType=DATE},
      </if>
      <if test="empFk != null">
        emp_fk = #{empFk,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.offcn.pojo.Project">
    update project
    set pname = #{pname,jdbcType=VARCHAR},
      comname = #{comname,jdbcType=INTEGER},
      comper = #{comper,jdbcType=VARCHAR},
      emp_fk1 = #{empFk1,jdbcType=INTEGER},
      empcount = #{empcount,jdbcType=INTEGER},
      starttime = #{starttime,jdbcType=DATE},
      buildtime = #{buildtime,jdbcType=DATE},
      cost = #{cost,jdbcType=INTEGER},
      level = #{level,jdbcType=VARCHAR},
      endtime = #{endtime,jdbcType=DATE},
      emp_fk = #{empFk,jdbcType=INTEGER},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.offcn.pojo.Project">
    update project
    set pname = #{pname,jdbcType=VARCHAR},
      comname = #{comname,jdbcType=INTEGER},
      comper = #{comper,jdbcType=VARCHAR},
      emp_fk1 = #{empFk1,jdbcType=INTEGER},
      empcount = #{empcount,jdbcType=INTEGER},
      starttime = #{starttime,jdbcType=DATE},
      buildtime = #{buildtime,jdbcType=DATE},
      cost = #{cost,jdbcType=INTEGER},
      level = #{level,jdbcType=VARCHAR},
      endtime = #{endtime,jdbcType=DATE},
      emp_fk = #{empFk,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>